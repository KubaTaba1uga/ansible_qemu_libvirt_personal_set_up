###############################################################################
# The MIT License
#
# Copyright 2012-2014 Jakub Jirutka <jakub@jirutka.cz>.
#
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.

## This format is understood by iptables-restore. See an iptables-restore

*mangle
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]

COMMIT

*nat
:PREROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
# Masquerade all packets going from VMs to the LAN/Internet.
-A POSTROUTING -s {{ public_network_ip }}/{{ ip_cidr_netmask }} ! -d {{ public_network_ip }}/{{ ip_cidr_netmask }} -p tcp -j MASQUERADE --to-ports 1024-65535
-A POSTROUTING -s {{ public_network_ip }}/{{ ip_cidr_netmask }} ! -d {{ public_network_ip }}/{{ ip_cidr_netmask }} -p udp -j MASQUERADE --to-ports 1024-65535
-A POSTROUTING -s {{ public_network_ip }}/{{ ip_cidr_netmask }} ! -d {{ public_network_ip }}/{{ ip_cidr_netmask }} -j MASQUERADE

COMMIT

*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]
######################## SECURITY ##############################
# Don't attempt to firewall internal traffic on the loopback device.
-A INPUT -i lo -j ACCEPT

# Continue connections that are already established or related to an established 
# connection.
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT

# Drop non-conforming packets, such as malformed headers, etc.
-A INPUT -m conntrack --ctstate INVALID -j DROP

# Drop PINGs not orginated from LAN
-A INPUT -i enp1s0 -d 172.16.0.0/16 -p icmp -j DROP
-A INPUT -i enp1s0 -d 172.31.0.0/16 -p icmp -j DROP

# Block remote packets claiming to be from a loopback address.
-4 -A INPUT -s 127.0.0.0/8 ! -i lo -j DROP
-6 -A INPUT -s ::1/128 ! -i lo -j DROP

# Drop all packets that are going to broadcast, multicast or anycast address.
-4 -A INPUT -m addrtype --dst-type BROADCAST -j DROP
-4 -A INPUT -m addrtype --dst-type MULTICAST -j DROP
-4 -A INPUT -m addrtype --dst-type ANYCAST -j DROP
-4 -A INPUT -d 224.0.0.0/4 -j DROP

# Chain for preventing SSH brute-force attacks.
# Permits 10 new connections within 5 minutes from a single host then drops 
# incomming connections from that host. Beyond a burst of 100 connections we 
# log at up 1 attempt per second to prevent filling of logs.
-N SSHBRUTE
-A SSHBRUTE -m recent --name SSH --set
-A SSHBRUTE -m recent --name SSH --update --seconds 300 --hitcount 10 -m limit --limit 1/second --limit-burst 100 -j LOG --log-prefix "iptables[SSH-brute]: "
-A SSHBRUTE -m recent --name SSH --update --seconds 300 --hitcount 10 -j DROP
-A SSHBRUTE -j ACCEPT

# Chain for preventing ping flooding - up to 6 pings per second from a single 
# source, again with log limiting. Also prevents us from ICMP REPLY flooding 
# some victim when replying to ICMP ECHO from a spoofed source.
-N ICMPFLOOD
-A ICMPFLOOD -m recent --set --name ICMP --rsource
-A ICMPFLOOD -m recent --update --seconds 1 --hitcount 6 --name ICMP --rsource --rttl -m limit --limit 1/sec --limit-burst 1 -j LOG --log-prefix "iptables[ICMP-flood]: "
-A ICMPFLOOD -m recent --update --seconds 1 --hitcount 6 --name ICMP --rsource --rttl -j DROP
-A ICMPFLOOD -j ACCEPT

# Permit useful IMCP packet types for IPv4
# Note: RFC 792 states that all hosts MUST respond to ICMP ECHO requests.
# Blocking these can make diagnosing of even simple faults much more tricky.
# Real security lies in locking down and hardening all services, not by hiding.
-4 -A INPUT -p icmp --icmp-type 0  -m conntrack --ctstate NEW -j ACCEPT
-4 -A INPUT -p icmp --icmp-type 3  -m conntrack --ctstate NEW -j ACCEPT
-4 -A INPUT -p icmp --icmp-type 11 -m conntrack --ctstate NEW -j ACCEPT

# Permit IMCP echo requests (ping) and use ICMPFLOOD chain for preventing ping 
# flooding.
-4 -A INPUT -p icmp --icmp-type 8  -m conntrack --ctstate NEW -j ICMPFLOOD
-6 -A INPUT -p ipv6-icmp --icmpv6-type 128 -j ICMPFLOOD

# Good practise is to explicately reject AUTH traffic so that it fails fast.
-A INPUT -p tcp --dport 113 --syn -m conntrack --ctstate NEW -j REJECT --reject-with tcp-reset

# Prevent DOS by filling log files.
-A INPUT -m limit --limit 1/minute --limit-burst 100 -j LOG --log-prefix "iptables[DOS]: " --log-level 3

######################## INPUT CONFIGURATION ##############################
# Allow traffic from private network
-A INPUT -s {{ private_network_ip }}/{{ ip_cidr_netmask }} -i {{ private_bridge_interface }} -j ACCEPT 

# Accept worldwide access to SSH and use SSHBRUTE chain for preventing 
# brute-force attacks.
-A INPUT -i enp1s0 -p tcp --dport 22 --syn -m conntrack --ctstate NEW -j SSHBRUTE

######################## FORWARD CONFIGURATION ##############################
# Allow established traffic to the subnets.
-A FORWARD -d {{ public_network_ip }}/{{ ip_cidr_netmask }} -o {{ public_bridge_interface }} -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -d {{ private_network_ip }}/{{ ip_cidr_netmask }} -o {{ private_bridge_interface }} -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
# Allow outbound traffic from the subnets.
-A FORWARD -s {{ public_network_ip }}/{{ ip_cidr_netmask }} -i {{ public_bridge_interface }} -j ACCEPT
-A FORWARD -s {{ private_network_ip }}/{{ ip_cidr_netmask }} -i {{ private_bridge_interface }} -j ACCEPT
# Allow traffic between virtual machines.
-A FORWARD -i {{ private_bridge_interface }} -o {{ private_bridge_interface }} -j ACCEPT
-A FORWARD -i {{ public_bridge_interface }} -o {{ public_bridge_interface }} -j ACCEPT

######################## DEBUG ##############################
# -N LOGGING
# -A INPUT -j LOGGING
# -A FORWARD -j LOGGING
# -A LOGGING -j LOG --log-prefix "iptables[Dropped]: " --log-level 7
# -A LOGGING -j DROP


COMMIT
